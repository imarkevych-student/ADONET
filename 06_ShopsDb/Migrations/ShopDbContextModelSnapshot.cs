// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _06_ShopsDb;

#nullable disable

namespace _06_ShopsDb.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_06_ShopsDb.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Електроніка"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Одяг"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Продукти"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Іграшки"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Канцелярія"
                        });
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Київ"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Львів"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Берлін"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 4,
                            Name = "Париж"
                        });
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Україна"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Польща"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Німеччина"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Франція"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Італія"
                        });
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Менеджер"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Касир"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Охоронець"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Прибиральник"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Технік"
                        });
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "вул. Хрещатик 1",
                            CityId = 1,
                            Name = "Магазин A",
                            ParkingArea = 50
                        },
                        new
                        {
                            Id = 2,
                            Address = "вул. Головна 12",
                            CityId = 2,
                            Name = "Магазин B",
                            ParkingArea = 30
                        },
                        new
                        {
                            Id = 3,
                            Address = "вул. Центральна 5",
                            CityId = 3,
                            Name = "Магазин C",
                            ParkingArea = 40
                        },
                        new
                        {
                            Id = 4,
                            Address = "вул. Шевченка 22",
                            CityId = 4,
                            Name = "Магазин D",
                            ParkingArea = 60
                        },
                        new
                        {
                            Id = 5,
                            Address = "вул. Рішельєвська 8",
                            CityId = 5,
                            Name = "Магазин E",
                            ParkingArea = 35
                        });
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.City", b =>
                {
                    b.HasOne("_06_ShopsDb.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Product", b =>
                {
                    b.HasOne("_06_ShopsDb.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Shop", b =>
                {
                    b.HasOne("_06_ShopsDb.Entities.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Worker", b =>
                {
                    b.HasOne("_06_ShopsDb.Entities.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06_ShopsDb.Entities.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_06_ShopsDb.Entities.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
